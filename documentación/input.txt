-- Este es un comentario de una sola línea

/* Este es un comentario
   de varias líneas */

CREATE DATABASE IF NOT EXISTS my_database;

CREATE TABLE IF NOT EXISTS my_table (
    id SERIAL PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    age INTEGER,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

ALTER TABLE my_table ADD COLUMN email VARCHAR(255);

INSERT INTO my_table (name, age, email) VALUES ('John Doe', 30, 'john@example.com');

SELECT name, age FROM my_table WHERE age > 25 ORDER BY age ASC;

UPDATE my_table SET age = 31 WHERE name = 'John Doe';

DELETE FROM my_table WHERE id = 1;

-- Consultar la base de datos
SELECT COUNT(*) AS total_records FROM my_table;

-- Consultas con operadores
SELECT * FROM my_table WHERE age BETWEEN 20 AND 40;

-- Uso de funciones de agregación
SELECT AVG(age) AS average_age FROM my_table;

-- Unir tablas
CREATE TABLE IF NOT EXISTS addresses (
    id SERIAL PRIMARY KEY,
    user_id INTEGER REFERENCES my_table(id),
    address TEXT
);

SELECT m.name, a.address 
FROM my_table m 
JOIN addresses a ON m.id = a.user_id 
WHERE m.age > 25;

-- Consultas con NULL
SELECT * FROM my_table WHERE email IS NULL;

-- Uso de condiciones lógicas
SELECT * FROM my_table 
WHERE (age < 25 OR age > 60) AND name IS NOT NULL;

-- Operadores relacionales
SELECT * FROM my_table WHERE id <> 10;

-- Instrucción de eliminación con CASCADE
DROP TABLE IF EXISTS addresses CASCADE;

